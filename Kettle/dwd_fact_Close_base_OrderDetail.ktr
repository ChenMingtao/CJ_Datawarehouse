<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>dwd_fact_Close_base_OrderDetail</name>
    <description />
    <extended_description />
    <trans_version />
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection />
        <schema />
        <table />
        <size_limit_lines />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject />
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject />
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject />
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject />
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection />
        <schema />
        <table />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection />
      <table />
      <field />
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file />
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2021/07/28 15:18:20.909</created_date>
    <modified_user>-</modified_user>
    <modified_date>2021/07/28 15:18:20.909</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <connection>
    <name>postgres</name>
    <server>192.168.133.122</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>cj_datawarehouse</database>
    <port>5432</port>
    <username>mxadmin</username>
    <password>Encrypted 2be98c2a91ed59b9caf1bff228dc6fa8c</password>
    <servername />
    <data_tablespace />
    <index_tablespace />
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>5432</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <order>
  </order>
  <step>
    <name>执行SQL脚本</name>
    <type>ExecSQL</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>postgres</connection>
    <execute_each_row>Y</execute_each_row>
    <single_statement>N</single_statement>
    <replace_variables>N</replace_variables>
    <quoteString>N</quoteString>
    <sql>DROP VIEW IF EXISTS v_Screen_PN_Base;
CREATE VIEW v_Screen_PN_Base
AS
SELECT   fpn AS PN, fOem AS OEM, fVer AS MSR, fModel AS Model, frmaclass, fremark AS fjk, '' AS CLASS, fsta, fdesc,
fDate_Repair_Safe as Date_SafeLunch, -1 as Sta_ARB, null as Date_SafeLunch_ARB
FROM ods_cj_odd_pn where updatetime::date=(now() - interval '1 day')::date
UNION ALL
SELECT     fpn AS PN, fOem AS OEM, fVer AS MSR, fModel AS Model, frmaclass, fjk AS fjk, fclass AS Class, fsta, fdesc,
approveDate as Date_SafeLunch, -1 as Sta_ARB, null as Date_SafeLunch_ARB
FROM         ods_cj_hdd_pn where updatetime::date=(now() - interval '1 day')::date
UNION ALL
SELECT     fpn AS PN, '' AS OEM, '' AS MSR, fmodel AS Model, frmaclass, hmu AS fjk, fclass AS Class, fsta, fCustDesc AS fdesc,
fdate__safelunch as Date_SafeLunch, -1 as Sta_ARB, null as Date_SafeLunch_ARB
FROM         ods_cj_cpu_pn where updatetime::date=(now() - interval '1 day')::date
UNION ALL
SELECT     fpn AS PN, fOem AS OEM, fmsrver AS MSR, fModel AS Model, frmaclass, Standard_Accessary_Material AS fjk, fclass AS Class, fsta, fdesc,
fDate_Safe_Luanch  as Date_SafeLunch, -1 as Sta_ARB, null as Date_SafeLunch_ARB
FROM         ods_cj_repair_model where updatetime::date=(now() - interval '1 day')::date
UNION ALL
SELECT     fpn AS PN, fOem AS OEM, fver AS MSR, fModel AS Model, frmaclass, MSR_ARB AS fjk, '' AS Class, fsta, fdesc,
fDate_Repair_Safe as Date_SafeLunch, Sta_ARB, fDate_Repair_Safe_ARB Date_SafeLunch_ARB
FROM         ods_cj_mb_pn where updatetime::date=(now() - interval '1 day')::date
UNION ALL
SELECT     fpn AS PN, fOem AS OEM, fver AS MSR, fModel AS Model, frmaclass, cardbus_type AS fjk, fclass AS Class, fsta, fdesc,
ApproveDate  as Date_SafeLunch, -1 as Sta_ARB, null as Date_SafeLunch_ARB
FROM         ods_cj_card_pn where updatetime::date=(now() - interval '1 day')::date
UNION ALL
SELECT     fpn AS PN, fOem AS OEM, fmsrver AS MSR, fModel AS Model, SvrCode as frmaclass, Platform AS fjk, Commodity AS Class, fsta, fdesc,
fDate_Safe_Luanch  as Date_SafeLunch, -1 as Sta_ARB, null as Date_SafeLunch_ARB
FROM         ods_base_pn_docking where updatetime::date=(now() - interval '1 day')::date;

INSERT INTO dwd_fact_Close_base_OrderDetail(ID, Order_ID,Area, SvrCode, Year_Code, Quarter_Code, Month_Code,
                                       Week_Code, Rma, Con, PPID, PN, SN, Return_RMA,
                                       ReturnTo, Commodity, Model,Model_Status, Date_SafeLunch,
                                       RMA_issue_Date, Receive_Date, Start_Date, Packing_Date, Close_Date,
                                       TAT_Closed, TAT_Packing, Test_Result, Final_Result, NG_ErrorDesc,
                                       NG_Reason, ErrDesc_VFIR, FailReason_VFIR, Delay_Type, Delay_Reason,
                                       Delay_Category, Submit_Date, Recover_Date, RequestRef, Platform,
                                       Return_times, SO, Service_tag, SCRAP, fResCode, fsta, fVIMFunRes,
                                       fRepairRes, LastID, Last_Closed_Date, ImportantNote, Last_ImportantNote,
                                       Last_ServiceTAG, Last_RequestREF, Last_DelayCategory, Last_Delaytype,
                                       Last_Returnto, Date_Bad_Post, Returnto_Last)
SELECT id,Order_ID,Area,SvrCode,Year_Code,Quarter_Code,Month_Code,Week_Code,RMA,Control,PPID,PN,SN,RETURNTO_RMA,RETURNTO,
       Commodity,Model,Model_Status,Date_SafeLunch,RMA_issue_Date,Receive_Date,Start_Date,Packing_Date,Close_Date,TAT_Closed,
       TAT_Packing,Test_Result,Final_Result, NG_ErrorDesc,NG_Reason, ErrDesc_VFIR, FailReason_VFIR, Delay_Type, Delay_Reason,
       Delay_Category, Submit_Date, Recover_Date, RequestRef, Platform,Return_times, SO, Service_tag, SCRAP, fResCode, fsta,
       fVIMFunRes,fRepairRes, LastID, Last_Closed_Date, ImportantNote, Last_ImportantNote,Last_ServiceTAG, Last_RequestREF,
       DelayCategory, Delaytype,Last_Returnto, Date_Bad_Post, Returnto_Last FROM
(select aa.fItemid as Order_ID,
case when bb.CustomerCode = 'DELL ARB' then 'ARB' else 'XM' end as Area,
bb.ServiceCode as SvrCode, aa.id, cc.fym Year_Code , cc.fqm as Quarter_Code, cc.fmm Month_Code , cc.fwk Week_Code,
rma.fReturnTo as RETURNTO_RMA, aa.fReturnto as RETURNTO, bb.Commodity AS Commodity,
RMA.fCon as Control, RMA.frma as RMA, aa.fpn as PN, aa.fppid AS PPID,   aa.fsn as SN, dd.Model as Model,
case when aa.fRmaClass = 45 then --ARB MB
case when dd.Sta_ARB in (2,6) THEN 'Safe Launch'  else 'NPI' end
else
case when dd.fsta in (2,6) THEN 'Safe Launch'  else 'NPI' end
end as Model_Status, --a1.FCodeName

case when aa.fRmaClass = 45 then dd.Date_SafeLunch_arb
else Date_SafeLunch end  as Date_SafeLunch,
RMA.Cdate as RMA_issue_Date,
RMA.fRptDate as Receive_Date, to_timestamp(null::text,'YYYY-MM-dd hh:mm:ss[.f...]') as Start_Date,
case when aa.fsta = 19 then aa.fDate_Pack else aa.fDate_BadPost end AS Packing_Date,
aa.fShipDate as Close_Date , -1 as TAT_Closed  , -1 as TAT_Packing,
case when ee.Disposition &lt;&gt; '' then ee.Disposition else  a2.FCodeName  end as Test_Result,
''  Final_Result,
case when aa.fsta = 29 and aa.frescode &lt;&gt;1 then aa.fErrDesc_En  ELSE '' end as NG_ErrorDesc,
case when aa.fsta = 29 and aa.frescode &lt;&gt;1 then aa.fFailReasen_En  ELSE '' end as NG_Reason,
ee.fErrDesc as ErrDesc_VFIR, ee.fFailReason FailReason_VFIR,
f1.fCodeName as Delay_Type  , ff.fWaitReason Delay_Reason,
ff.fRemark Delay_Category, ff.Cdate as Submit_Date,ff.fUnWaitDate  as Recover_Date,
RMA.fRequestREF as RequestRef, dd.model as Platform,
aa.fReturnTimes Return_times, rma.fSo as SO, RMA.fSt as Service_tag,
'' AS SCRAP,
aa.fResCode , aa.fsta, aa.fVIMFunRes, aa.fRepairRes,
aa.fLastID as LastID, RR.fShipDate as Last_Closed_Date, RMA.ImportantNote, RMA_RR.ImportantNote as Last_ImportantNote,
RMA_RR.fSt as  Last_ServiceTAG, RMA_RR.fRequestREF as  Last_RequestREF,
f1.DelayCategory, f1.Delaytype, RMA_RR.fReturnTo as Last_Returnto, aa.fDate_BadPost as Date_Bad_Post,
RMA.Returnto_Last


from ods_cj_odditem aa
inner join ods_cj_rmaitem RMA on RMA.Id = aa.fItemid
inner join ods_wx_returnto_base bb on RMA.fReturnTo = bb.ReturnTo  AND CustomerCode in ('DELL', 'DELL ARB', 'DELL_PNA','THB')
left outer join ods_holidays cc on aa.fShipDate = to_timestamp(cc.fsDate::text,'YYYY-MM-dd hh:mm:ss[.f...]')
left outer join v_Screen_PN_Base dd on dd.PN = aa.fpn
--left outer join cj_code a1 on a1.FType = 56 and a1.FCode = dd.fsta
left outer join ods_screen_disposition ee on ee.fScreenID = aa.id
left outer join ods_wx_wait_master ff on ff.id = aa.fwaitid
left outer join ods_cj_delay_mast f1 on ff.fWaitType = f1.fcode
LEFT OUTER JOIN ods_cj_code a2 ON a2.FType = 22 AND a2.FParent = '7' AND a2.FCode = aa.fVIMFunRes
left outer join ods_cj_odditem RR on RR.id = aa.fLastID
left outer join ods_cj_rmaitem RMA_RR on RMA_RR.Id = RR.fItemid

where aa.fsta IN (19,29)
and RMA.fReturnTo in (select ReturnTo from ods_wx_returnto_base where  CustomerCode in ('DELL', 'DELL ARB', 'DELL_PNA','THB'))
AND bb.ServiceCode in (8, 14, 16,17,18,  21,22,23, 25,26,27,28,32,36,39,43,44,45, 87)
and aa.fRmaClass &lt;&gt; 46
and aa.fShipDate >= '2020-03-01'
and aa.updatetime::date=(now() - interval '1 day')::date

UNION ALL

select aa.fItemid as Order_ID,
case when bb.CustomerCode = 'DELL ARB' then 'ARB' else 'XM' end as Area,
bb.ServiceCode as SvrCode, aa.id, cc.fym Year_Code ,cc.fqm as Quarter_Code, cc.fmm Month_Code , cc.fwk Week_Code,
rma.fReturnTo as RETURNTO_RMA, aa.fReturnto as RETURNTO, bb.Commodity,
RMA.fCon as Control, RMA.frma as RMA, aa.fpn as PN, aa.fppid AS PPID,   aa.fsn as SN, dd.Model,
case when dd.fsta in (2,6) THEN 'Safe Launch'  else 'NPI' end as Model_Status, --a1.FCodeName
dd.fDate_Repair_Safe, to_date(RMA.Cdate::text,'YYYY-MM-dd HH24:MI:SS[.f...]') as RMA_issue_Date, to_date(RMA.fRptDate::text,'YYYY-MM-dd HH24:MI:SS[.f...]') as Receive_Date,
to_date(null::text,'YYYY-MM-dd HH24:MI:SS[.f...]') as Start_Date,
case when aa.fsta = 19 then to_date(aa.fDate_Pack::text,'YYYY-MM-dd HH24:MI:SS[.f...]') else to_date(aa.fDate_BadPost::text,'YYYY-MM-dd HH24:MI:SS[.f...]') end AS Packing_Date,
aa.fShipDate as Close_Date , -1 as TAT_Closed  , -1 as TAT_Packing,
case when ee.Disposition &lt;&gt; '' then ee.Disposition else  a2.FCodeName  end as Test_Result,
'' Final_Result,
case when aa.fsta = 29 and aa.frescode &lt;&gt;1 then aa.fErrDesc_En  ELSE '' end as NG_ErrorDesc,
case when aa.fsta = 29 and aa.frescode &lt;&gt;1 then aa.fFailReasen_En  ELSE '' end as NG_Reason,
ee.fErrDesc as ErrDesc_VFIR, ee.fFailReason FailReason_VFIR,
f1.fCodeName as Delay_Type  , ff.fWaitReason Delay_Reason,
ff.fRemark Delay_Category, ff.Cdate as Submit_Date,ff.fUnWaitDate as Recover_Date,
RMA.fRequestREF as RequestRef, dd.model as Platform,
aa.fReturnTimes Return_times, rma.fSo as SO, RMA.fSt as Service_tag ,
--CASE WHEN aa.frescode = 1 THEN 'No' WHEN aa.frescode = 2 THEN ee.scrap ELSE '' END
'' AS SCRAP,
aa.fResCode , aa.fsta, aa.fVIMFunRes, aa.fRepairRes,
aa.fLastID as LastID, RR.fShipDate as Last_Closed_Date, RMA.ImportantNote, RMA_RR.ImportantNote as Last_ImportantNote,
RMA_RR.fSt as  Last_ServiceTAG,  RMA_RR.fRequestREF as  Last_RequestREF,
f1.DelayCategory, f1.Delaytype, RMA_RR.fReturnTo as Last_Returnto, aa.fDate_BadPost as Date_Bad_Post,
RMA.Returnto_Last
--case when RR.fShipDate &lt;&gt; '' then DATEDIFF(DAY, RR.fShipDate, RMA.fRptDate) else 0 end AS Days_RR
from ods_cj_oddItem aa
left outer join ods_cj_rmaitem RMA on RMA.Id = aa.fItemid
inner join ods_wx_returnto_base bb on RMA.fReturnTo = bb.ReturnTo AND CustomerCode in ('DELL', 'DELL ARB', 'DELL_PNA')
left outer join ods_holidays cc on aa.fShipDate = to_timestamp(cc.fsDate::text,'YYYY-MM-dd hh:mm:ss[.f...]')
left outer join dwd_dim_mem dd on dd.pn = aa.fpn and aa.ODM = dd.odm
--left outer join cj_code a1 on a1.FType = 56 and a1.FCode = dd.fsta
left outer join ods_screen_disposition ee on ee.fScreenID = aa.id
left outer join ods_wx_wait_master ff on ff.id = aa.fwaitid
left outer join ods_cj_delay_mast f1 on ff.fWaitType = f1.fcode
LEFT OUTER JOIN ods_cj_code a2 ON a2.FType = 22 AND a2.FParent = '7' AND a2.FCode = aa.fVIMFunRes
left outer join ods_cj_odditem RR on RR.id = aa.fLastID
left outer join ods_cj_rmaitem RMA_RR on RMA_RR.Id = RR.fItemid
where aa.fsta IN (19,29) AND bb.ServiceCode in (15,24)
and RMA.fReturnTo in (select ReturnTo from ods_wx_returnto_base where  CustomerCode in ('DELL', 'DELL ARB', 'DELL_PNA','THB'))
and aa.fShipDate >= '2020-01-01'
and aa.updatetime::date=(now() - interval '1 day')::date
)as temp;

DROP TABLE IF EXISTS temp_screen;
CREATE TEMPORARY TABLE temp_screen(id int,Scrap varchar(30),fsta int);
INSERT INTO temp_screen(id, Scrap,fsta)
SELECT fScreenID,scrap,fsta  FROM ods_screen_disposition
where fsta in (19,29) and updatetime::date=(now() - interval '1 day')::date;


UPDATE dwd_fact_Close_base_OrderDetail aa
SET SCRAP=cj_KPI_DELL_IsScrap(aa.returnto, aa.SvrCode, aa.fsta, aa.frescode, aa.fVIMFunRes, aa.fRepairRes,
       CASE WHEN aa.frescode = 1 THEN 'No' WHEN aa.frescode = 2 THEN temp_screen.scrap WHEN aa.frescode = 3 THEN 'RTV' ELSE '' END)
FROM   temp_screen
WHERE aa.id=temp_screen.id and
      aa.SvrCode in (8, 14, 15, 16,17,18,  21,22,23, 24, 25,26,27,28,32,36,39,43,44,45, 87)
    -- and  aa.Commodity not in  ('DT LCD' , 'Monitor')
     and aa.Area in ('ARB', 'XM')
     and updatetime::date=(now() - interval '1 day')::date
  --  and aa.fResCode in (1,2,3)
    and COALESCE(aa.Scrap, '') &lt;&gt; cj_KPI_DELL_IsScrap(aa.Returnto, aa.SvrCode, aa.fsta, aa.frescode, aa.fVIMFunRes, aa.fRepairRes,
      CASE WHEN aa.frescode = 1 THEN 'No' WHEN aa.frescode = 2 THEN temp_screen.scrap WHEN aa.frescode = 3 then 'RTV' ELSE '' END);
set enable_nestloop =off;
update dwd_fact_Close_base_OrderDetail aa
    set Test_Result = bb.Disposition
   -- select aa.*
    from ods_screen_disposition bb
    where aa.updatetime::date=(now() - interval '1 day')::date
    and bb.fScreenID = aa.id and bb.fsta in (19,29)
    and   aa.SvrCode in (8, 14, 15, 16,17,18,  21,22,23, 24, 25,26,27,28,32,36,39,43,44,45, 87)
    -- aa.Commodity not in  ('DT LCD' , 'Monitor')
    and aa.Area in ('ARB', 'XM')
    and COALESCE(aa.Test_Result, '') &lt;&gt; COALESCE(bb.Disposition, '');

SELECT Dell_KPI_days('dwd_fact_close_base_orderdetail');--更新其他

DELETE FROM dwd_fact_Close_base_OrderDetail
    WHERE ID in (SELECT a1.id  FROM dwd_fact_Close_base_OrderDetail a1,dwd_fact_Close_base_OrderDetail a2
    where a1.Con=a2.Con and a1.updatetime&lt;a2.updatetime);</sql>
    <set_params>N</set_params>
    <insert_field />
    <update_field />
    <delete_field />
    <read_field />
    <arguments>
    </arguments>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>592</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
</transformation>
